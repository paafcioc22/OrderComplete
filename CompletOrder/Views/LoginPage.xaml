<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converter="clr-namespace:CompletOrder.ViewModels"
             mc:Ignorable="d"
             x:Class="CompletOrder.Views.LoginPage" NavigationPage.HasNavigationBar="False">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:ObjectNullConverter x:Key="HasValueConverter" />
            <converter:MultiCulti x:Key="MultiConvert" />
        </ResourceDictionary>
    </ContentPage.Resources>


    <RelativeLayout BackgroundColor="#feecfa">
        <BoxView Color="Gray"
                 HeightRequest="130"
                 RelativeLayout.WidthConstraint="{ConstraintExpression
                    Type=RelativeToParent,Property=Width, Factor=1}"
                 />

        <Button CornerRadius="70" x:Name="imageCircleBack" HeightRequest="135" WidthRequest="135" 
                RelativeLayout.XConstraint="{ConstraintExpression 
            Type=RelativeToParent,
            Property=Width, 
            Factor=.5, 
            Constant = -70}" 
                
                RelativeLayout.YConstraint="{ConstraintExpression 
            Type=RelativeToParent, 
            Factor=0, 
            Property=Y, 
            Constant=60}" BackgroundColor="#f4b9fe" />

        <Button x:Name="btn_click"  CornerRadius="63" Clicked="Button_Clicked" BackgroundColor="Black" HeightRequest="125" ImageSource="szacho.9" Scale="1"   TextColor="White"
            WidthRequest="125" RelativeLayout.XConstraint="{ConstraintExpression 
            Type=RelativeToView, 
            ElementName=imageCircleBack, 
            Property=X, 
            Factor=1,
            Constant=5}" 
                RelativeLayout.YConstraint="{ConstraintExpression 
            Type=RelativeToParent, 
            Factor=0, 
            Property=Y, 
            Constant=65}" />

        <Label Text="Logowanie" FontSize="25" TextColor="Black" HorizontalTextAlignment="Center"  
               RelativeLayout.XConstraint="{ConstraintExpression
            Type=RelativeToView,ElementName=imageCircleBack,Property=X,Factor=1,Constant=10}"
               
                RelativeLayout.YConstraint="{ConstraintExpression 
            Type=RelativeToParent, 
            Factor=0, 
            Property=Y, 
            Constant=220}" 
               />
        <Picker Title="Wybierz użytkownika" x:Name="PickerLogin" 
                ItemsSource="{Binding Users}" 
                ItemDisplayBinding="{Binding Login}" 
                SelectedItem="{Binding SelectUser, Mode=TwoWay}"
                SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"  
            RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0,Constant=300}"
            RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.1, Constant=0}"
            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.8,Constant=0}"
            RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0,Constant=50}" >
            
        </Picker>

       
        
        <Entry Placeholder="Podaj hasło" x:Name="entry_haslo" Text="{Binding Pass1}" IsVisible="false"
               IsPassword="True" 
               Keyboard="Text"    
               BackgroundColor="White" 
               TextColor="Black" 
               HorizontalTextAlignment="Center"
                ReturnType="Done"
               ReturnCommand="{Binding PassCheckCommand}"
               ReturnCommandParameter="{Binding Source={x:Reference entry_haslo}, Path=Text}"
            RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0,Constant=400}"
            RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.1, Constant=0}"
            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.8,Constant=0}"
            RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0,Constant=50}" 
           >
            <Entry.Triggers>
                <DataTrigger TargetType="Entry" Binding="{Binding Source={x:Reference PickerLogin},Path=SelectedItem.Login,Converter={StaticResource HasValueConverter} }"  Value="True" >
                    <Setter Property="IsVisible" Value="true"></Setter>
                </DataTrigger>
            </Entry.Triggers>
        </Entry>

        <Entry Placeholder="Powtórz hasło" x:Name="entry_haslo2" Text="{Binding Pass2}" IsVisible="false"
               IsPassword="True" 
               Keyboard="Text"   
               BackgroundColor="White" 
               TextColor="Black" 
               HorizontalTextAlignment="Center"
               Completed="entry_haslo2_Completed"
            RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0,Constant=500}"
            RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.1, Constant=0}"
            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.8,Constant=0}"
            RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0,Constant=50}" 
           >
            <Entry.Triggers>
                <DataTrigger TargetType="Entry" Binding="{Binding SelectUser.VisiblePass }"  Value="true" >
                    <Setter Property="IsVisible" Value="true"></Setter>
                </DataTrigger>
            </Entry.Triggers>
                
        </Entry>

        <Button Text="Zapisz hasło"   IsVisible="false" x:Name="btn_rejestruj" IsEnabled="{Binding IsUserIdsEqual}"
            RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0,Constant=600}"
            RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.1, Constant=0}"
            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.8,Constant=0}"
            RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0,Constant=50}"
                Command="{Binding SaveUserPass}" CommandParameter="{Binding SelectUser}"
                >
            <Button.Triggers>
                <DataTrigger TargetType="Button" Binding="{Binding SelectUser.VisiblePass }"  Value="true" >
                    <Setter Property="IsVisible" Value="true"></Setter>
                </DataTrigger>
                
            </Button.Triggers>
        </Button>

        <Label x:Name="wersja_label" TextColor="Black"  HorizontalTextAlignment="End"  Text="ver 1.4"
            RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1,Constant=-30}"
            RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=-90}"
            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.2,Constant=0}"/>

        <Switch x:Name="typeConnSwitch"  Toggled="typeConnSwitch_Toggled" HorizontalOptions="Start" 
            RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1,Constant=-50}"
            RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=30}"
            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.2,Constant=0}"/>

        <ActivityIndicator  Color="#f4b9fe"    x:Name="kolko" IsVisible="{Binding IsBusy}" IsRunning="{Binding IsBusy}"
            RelativeLayout.XConstraint="{ConstraintExpression
            Type=RelativeToView,ElementName=imageCircleBack,Property=X,Factor=1.4}"
               
                RelativeLayout.YConstraint="{ConstraintExpression 
            Type=RelativeToParent, 
            Factor=0, 
            Property=Y, 
            Constant=260}"/>


    </RelativeLayout>
</ContentPage>